1) If a new page is the result of an action then the method should return the Page Object of the new page
2) Hermetic Test Pattern - Each test class must be completely independent and self-sufficient.
    The advantages are
        1) Independent start
        2) Stable Independent Test methods
3) Utility methods can be used to get smaller works not related to interaction with webpages. Basically helper functions.
    For Example: sleep method can be created here because the Thread.sleep() requires the callee function to handle exception.
    When we create it in util with try catch block, we can just call the util method to use sleep. The code will look cleaner.
    Other examples like create random string, random number, etc can be a part of util class.
    utility methods are always static so that it can be called without object creation

4) WebDriver Factory implementation
    Singleton Design Pattern
        Only one instance of a class exists at a time.
    Factory Design Pattern
        Separate method for creating an object

5) Checkpoint class - can use soft assert as well.
    Run through entire test and capture all the assertion failures.
    If there is a single assertion failure also, fail the test method.
    If all the assertions pass, then mark the test method as pass

    The first few assert statements of the test method can use mark() method in CheckPoint Class
    The final assert must use markAll() method in Checkpoint class

    The advantage of this over soft assert is the proper logging message.
